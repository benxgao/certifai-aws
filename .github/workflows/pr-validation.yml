name: PR Validation

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: "22"

jobs:
  validate:
    name: Validate Pull Request
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for better analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests with coverage
        run: npm test -- --coverage --passWithNoTests

      - name: Build TypeScript
        run: npm run build

      - name: Validate SAM template
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: SAM validate
        run: sam validate

      - name: SAM build (dry run)
        run: sam build --use-container

      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for TypeScript errors
        run: npx tsc --noEmit

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('## PR Validation Results')
            );

            const body = `## PR Validation Results

            âœ… **Linting**: Passed
            âœ… **Tests**: Passed  
            âœ… **Build**: Passed
            âœ… **SAM Validation**: Passed

            The pull request has been validated and is ready for review.

            <sub>ðŸ¤– This comment is automatically updated</sub>`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
